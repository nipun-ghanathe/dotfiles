# See https://i3wm.org/docs/userguide.html for a complete reference!

# Set the mod key; Mod1 is Alt; Mod4 is Win;
set $mod Mod4

# Set the terminal
set $term kitty

# Font and font size for window titles, status bar, etc
font pango:FiraCode-Regular 11

# Launch a compositor - like Picom; for better transitions, transparency, shadows, appearance, etc
exec --no-startup-id picom

# Set wallpaper using feh
exec_always --no-startup-id feh --bg-fill ~/dotfiles/wallpapers/005.jpg

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the screen before suspend
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Using PulseAudioControl (pactl) to adjust volume and reflect changes on status bar
set $refresh_i3blocks pkill -RTMIN+10 i3blocks
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3blocks
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3blocks
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3blocks
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3blocks

# Media player controls # I have never tested this
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous Volume Controls

# Sreen brightness controls # I don't think that this works
bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# start a terminal
bindsym $mod+Return exec $term

# start your browser
bindsym $mod+o exec $browser

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
bindsym $mod+d exec --no-startup-id dmenu_run -nb '#1e1e2e' -nf '#cdd6f4' -sb '#89b4fa' -sf '#1e1e2e' -fn 'FiraCode Nerd Font:size=12'

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in vertical orientation
bindsym $mod+shift+v split h

# split in horizontal orientation
bindsym $mod+shift+s split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+b focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# You can also use names like:
# set $ws1 "1: terms"
# set $ws1 "2: web"
# set $ws1 "3: file_manager"
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Enabling automatic switching to the previously focused workspace when selecting the current one again 
workspace_auto_back_and_forth yes

# Configuring apps to launch at startup
exec --no-startup-id i3-msg "workspace $ws2; exec firefox"
exec --no-startup-id i3-msg "workspace $ws1; exec alacritty --title StartupTerm"
for_window [title="StartupTerm"] fullscreen enable
exec_always --no-startup-id ~/.cargo/bin/kanata -c ~/.config/kanata/kanata.cfg

# Configuring application workspaces
# You can find the class of an application using `xprop | grep WM_CLASS`
# It would return `WM_CLASS(STRING) = "Instance", "Class"`
# assign [class="Alacritty"] $ws1
assign [class="firefox_firefox"] $ws2
assign [class="org.gnome.Nautilus"] $ws3

# Floating pop-up automatically
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# instead use $mod+BS to enter system mode and logout

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# Disabling mouse from focusing windows
focus_follows_mouse no

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

# back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# shutdown / restart / suspend...
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (CTRL+s) shutdown

mode "$mode_system" {
    bindsym l exec --no-startup-id i3lock, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id i3lock && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id i3lock && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Ctrl+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+BackSpace mode "$mode_system"

# Use xrandr to configure monitors
# You can use arandr as a graphical user interface to generate teh xrandr script
# and then xrandr script here

# Launch status bar configured with colors - i3blocks
bar {
    status_command i3blocks -c ~/.config/i3/i3blocks.conf
}

# Making borders thinner
default_border pixel 1
default_floating_border normal 2
# no borders for single window
smart_borders on

# Configuring gaps between windows
gaps inner 2
gaps outer 0

# colors for borders
# class                 border  bground text    indicator child_border
client.focused          #6272a4 #6272a4 #f8f8f2 #6272a4   #6272a4
client.focused_inactive #44475a #44475a #f8f8f2 #44475a   #44475a
client.unfocused        #282a36 #282a36 #bfbfbf #282a36   #282a36
client.urgent           #ff5555 #ff5555 #f8f8f2 #ff5555   #ff5555
client.placeholder      #282a36 #282a36 #f8f8f2 #282a36   #282a36
client.background       #f8f8f2
