#!/bin/bash

# Clear cache if asked
if [[ "$1" == "--edit-cache" || "$1" == "-e" ]]; then
  $EDITOR ~/.tmux_session_cache && exit 0
elif [[ "$1" == "--clear-cache" || "$1" == "-c" ]]; then
  > ~/.tmux_session_cache
  echo "Session cache cleared."
  exit 0
elif [[ "$1" == "--remove-session" || "$1" == "-r" ]]; then
  [[ $# -lt 1 ]] && echo "Session to remove not mentioned" >&2 && exit 1
  shift
  while [[ -n "$1" ]]; do
    session_to_remove="$1"
    temp_file=$(mktemp)
    grep -Fwv "$session_to_remove" ~/.tmux_session_cache 2>/dev/null > "$temp_file" && mv "$temp_file" ~/.tmux_session_cache
    echo "Removed session: $session_to_remove"
    shift
  done
  exit 0
fi

# Get the project directory or session
if [[ $# -eq 1 ]]; then
  selection="$1"
else
  selection=$({ cat ~/.tmux_session_cache; fd . ~/code --type d --max-depth 2; } | fzf)
fi
[[ -z "$selection" ]] && echo "No directory or session selected" >&2 && exit 1

# Evaluate session name and session path
# Load session if a tmux-layout file exists
if [[ "$selection" == \[tmux\]* ]]; then
  read _ session_name session_path <<< "$selection"
  [[ -f "$session_path/.tmux-layout" ]] && bash "$session_path/.tmux-layout" && exit 0
else
  [[ -f "$selection/.tmux-layout" ]] && bash "$selection/.tmux-layout" && exit 0
  session_name=$(basename "$selection")
  session_path=$({ echo "$selection"; fd . "$selection" --type d; } | fzf) || session_path="$selection"
fi

# Store recent sessions in a cache file for easy access
entry="[tmux] $session_name $session_path"
temp_file=$(mktemp)
{
  echo "$entry"
  grep -Fxv "$entry" ~/.tmux_session_cache 2>/dev/null
} | head -n 8 > "$temp_file" && mv "$temp_file" ~/.tmux_session_cache

# Create new session if it doesn't exist and attach to it
if ! tmux has-session -t "$session_name" 2>/dev/null; then
  tmux new-session -ds "$session_name" -c "$session_path"
  tmux new-window -t "$session_name:2" -c "$session_path" "nvim"
fi
tmux switch-client -t "$session_name" 2>/dev/null || tmux attach-session -t "$session_name"
